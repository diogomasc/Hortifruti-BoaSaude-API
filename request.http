### ========================================
### VARI√ÅVEIS DE DEMONSTRA√á√ÉO
### ========================================

@baseUrl = http://localhost:3333

# Tokens de autentica√ß√£o (ser√£o atualizados ap√≥s login)
@consumerToken = 
@producer1Token = 
@producer2Token = 

# IDs que ser√£o preenchidos durante a demonstra√ß√£o
@addressId = 
@product1Id = 
@product2Id = 
@product3Id = 
@product4Id = 
@orderId = 
@orderItemId = 

### ========================================
### DEMONSTRA√á√ÉO COMPLETA DA API HORTIFRUTI BOA SA√öDE
### Cen√°rio: 1 Consumidor + 2 Produtores + Produtos Variados
### ========================================

### ========================================
### ETAPA 1: CRIA√á√ÉO DE USU√ÅRIOS
### ========================================

### 1.1 Criar Consumidor
POST {{baseUrl}}/register
Content-Type: application/json

{
  "email": "maria.silva@email.com",
  "password": "senha123",
  "firstName": "Maria",
  "lastName": "Silva",
  "phone": "11987654321",
  "role": "consumer",
  "cpf": "12345678901",
  "birthDate": "1985-03-15"
}

###

### 1.2 Criar Produtor 1 - Fazenda Verde
POST {{baseUrl}}/register
Content-Type: application/json

{
  "email": "contato@fazendaverde.com",
  "password": "senha123",
  "firstName": "Jo√£o",
  "lastName": "Santos",
  "phone": "11987654322",
  "role": "producer",
  "cnpj": "12345678000195",
  "shopName": "Fazenda Verde",
  "shopDescription": "Especializada em verduras e legumes org√¢nicos frescos"
}

###

### 1.3 Criar Produtor 2 - Pomar do Vale
POST {{baseUrl}}/register
Content-Type: application/json

{
  "email": "vendas@pomardovale.com",
  "password": "senha123",
  "firstName": "Ana",
  "lastName": "Costa",
  "phone": "11987654323",
  "role": "producer",
  "cnpj": "98765432000187",
  "shopName": "Pomar do Vale",
  "shopDescription": "Frutas frescas e temperos naturais direto do campo"
}

###

### ========================================
### ETAPA 2: AUTENTICA√á√ÉO
### ========================================

### 2.1 Login do Consumidor
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "maria.silva@email.com",
  "password": "senha123"
}

# üìã COPIE o token retornado e cole na vari√°vel @consumerToken

###

### 2.2 Login do Produtor 1 (Fazenda Verde)
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "contato@fazendaverde.com",
  "password": "senha123"
}

# üìã COPIE o token retornado e cole na vari√°vel @producer1Token

###

### 2.3 Login do Produtor 2 (Pomar do Vale)
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "vendas@pomardovale.com",
  "password": "senha123"
}

# üìã COPIE o token retornado e cole na vari√°vel @producer2Token

###

### ========================================
### ETAPA 3: CONFIGURA√á√ÉO INICIAL
### ========================================

### 3.1 Criar Endere√ßo de Entrega (Consumidor)
POST {{baseUrl}}/users/me/addresses
Authorization: Bearer {{consumerToken}}
Content-Type: application/json

{
  "street": "Rua das Palmeiras, 456",
  "number": "456",
  "complement": "Casa 2",
  "city": "S√£o Paulo",
  "state": "SP",
  "country": "Brasil",
  "zipCode": "01234567"
}

# üìã COPIE o id retornado e cole na vari√°vel @addressId

###

### ========================================
### ETAPA 4: CADASTRO DE PRODUTOS
### ========================================

### 4.1 Produto 1 - Fazenda Verde: Alface Org√¢nica
POST {{baseUrl}}/products
Authorization: Bearer {{producer1Token}}
Content-Type: application/json

{
  "title": "Alface Org√¢nica Crespa",
  "description": "Alface fresca cultivada sem agrot√≥xicos, ideal para saladas",
  "price": "4.50",
  "category": "verduras",
  "quantity": 80
}

# üìã COPIE o id retornado e cole na vari√°vel @product1Id

###

### 4.2 Produto 2 - Fazenda Verde: Cenoura Baby
POST {{baseUrl}}/products
Authorization: Bearer {{producer1Token}}
Content-Type: application/json

{
  "title": "Cenoura Baby Org√¢nica",
  "description": "Cenouras pequenas e doces, perfeitas para lanches saud√°veis",
  "price": "6.80",
  "category": "legumes",
  "quantity": 60
}

# üìã COPIE o id retornado e cole na vari√°vel @product2Id

###

### 4.3 Produto 3 - Pomar do Vale: Ma√ß√£ Gala
POST {{baseUrl}}/products
Authorization: Bearer {{producer2Token}}
Content-Type: application/json

{
  "title": "Ma√ß√£ Gala Premium",
  "description": "Ma√ß√£s doces e crocantes, colhidas no ponto ideal de matura√ß√£o",
  "price": "8.90",
  "category": "frutas",
  "quantity": 100
}

# üìã COPIE o id retornado e cole na vari√°vel @product3Id

###

### 4.4 Produto 4 - Pomar do Vale: Manjeric√£o Fresco
POST {{baseUrl}}/products
Authorization: Bearer {{producer2Token}}
Content-Type: application/json

{
  "title": "Manjeric√£o Fresco",
  "description": "Manjeric√£o arom√°tico cultivado em estufa, ideal para temperos",
  "price": "3.20",
  "category": "temperos",
  "quantity": 40
}

# üìã COPIE o id retornado e cole na vari√°vel @product4Id

###

### ========================================
### ETAPA 5: DEMONSTRA√á√ÉO DE PEDIDOS
### ========================================

### 5.1 Listar Produtos Dispon√≠veis (P√∫blico)
GET {{baseUrl}}/products
Content-Type: application/json

# üëÄ Visualize todos os produtos cadastrados pelos produtores

###

### 5.2 Criar Pedido √önico Misto (Consumidor)
POST {{baseUrl}}/orders
Authorization: Bearer {{consumerToken}}
Content-Type: application/json

{
  "deliveryAddressId": "{{addressId}}",
  "items": [
    {
      "productId": "{{product1Id}}",
      "quantity": 2
    },
    {
      "productId": "{{product3Id}}",
      "quantity": 3
    },
    {
      "productId": "{{product4Id}}",
      "quantity": 1
    }
  ]
}

# üìã COPIE o orderId retornado e cole na vari√°vel @orderId
# üìã COPIE um dos orderItemIds retornados e cole na vari√°vel @orderItemId

###

### 5.3 Criar Pedido Recorrente Semanal (Consumidor)
POST {{baseUrl}}/orders
Authorization: Bearer {{consumerToken}}
Content-Type: application/json

{
  "deliveryAddressId": "{{addressId}}",
  "items": [
    {
      "productId": "{{product1Id}}",
      "quantity": 1
    },
    {
      "productId": "{{product2Id}}",
      "quantity": 2
    }
  ],
  "isRecurring": true,
  "frequency": "WEEKLY"
}

###

### ========================================
### ETAPA 6: GEST√ÉO DE PEDIDOS PELOS PRODUTORES
### ========================================

### 6.1 Listar Itens Pendentes - Produtor 1 (Fazenda Verde)
GET {{baseUrl}}/orders/items/pending
Authorization: Bearer {{producer1Token}}
Content-Type: application/json

# üëÄ Visualize os itens de verduras/legumes aguardando aprova√ß√£o

###

### 6.2 Listar Itens Pendentes - Produtor 2 (Pomar do Vale)
GET {{baseUrl}}/orders/items/pending
Authorization: Bearer {{producer2Token}}
Content-Type: application/json

# üëÄ Visualize os itens de frutas/temperos aguardando aprova√ß√£o

###

### 6.3 Aprovar Item do Pedido - Produtor 1
PATCH {{baseUrl}}/orders/{{orderId}}/items/{{orderItemId}}/status
Authorization: Bearer {{producer1Token}}
Content-Type: application/json

{
  "status": "APPROVED"
}

###

### 6.4 Exemplo de Rejei√ß√£o - Produtor 2
# PATCH {{baseUrl}}/orders/{{orderId}}/items/{{orderItemId}}/status
# Authorization: Bearer {{producer2Token}}
# Content-Type: application/json
# 
# {
#   "status": "REJECTED",
#   "rejectionReason": "Produto temporariamente em falta"
# }

###

### ========================================
### ETAPA 7: VERIFICA√á√ïES E GEST√ÉO
### ========================================

### 7.1 Verificar Status do Pedido (Consumidor)
GET {{baseUrl}}/orders/{{orderId}}
Authorization: Bearer {{consumerToken}}
Content-Type: application/json

# üëÄ Veja o status atualizado ap√≥s aprova√ß√µes/rejei√ß√µes

###

### 7.2 Listar Todos os Pedidos (Consumidor)
GET {{baseUrl}}/orders
Authorization: Bearer {{consumerToken}}
Content-Type: application/json

###

### 7.3 Gerenciar Pedido Recorrente - Pausar
PATCH {{baseUrl}}/orders/{{orderId}}/manage
Authorization: Bearer {{consumerToken}}
Content-Type: application/json

{
  "action": "pause"
}

###

### 7.4 Gerenciar Pedido Recorrente - Alterar Frequ√™ncia
PATCH {{baseUrl}}/orders/{{orderId}}/manage
Authorization: Bearer {{consumerToken}}
Content-Type: application/json

{
  "frequency": "CUSTOM",
  "customDays": 10
}

###

### 7.5 Gerenciar Pedido Recorrente - Retomar
PATCH {{baseUrl}}/orders/{{orderId}}/manage
Authorization: Bearer {{consumerToken}}
Content-Type: application/json

{
  "action": "resume"
}

###

### ========================================
### ETAPA 8: GEST√ÉO DE PRODUTOS PELOS PRODUTORES
### ========================================

### 8.1 Listar Produtos - Fazenda Verde
GET {{baseUrl}}/products/me
Authorization: Bearer {{producer1Token}}
Content-Type: application/json

###

### 8.2 Listar Produtos - Pomar do Vale
GET {{baseUrl}}/products/me
Authorization: Bearer {{producer2Token}}
Content-Type: application/json

###

### 8.3 Atualizar Produto - Fazenda Verde
PUT {{baseUrl}}/products/{{product1Id}}
Authorization: Bearer {{producer1Token}}
Content-Type: application/json

{
  "title": "Alface Org√¢nica Crespa Premium",
  "description": "Alface fresca cultivada sem agrot√≥xicos, certificada org√¢nica",
  "price": "5.00",
  "category": "verduras",
  "quantity": 75
}

###

### 8.4 Obter Produto Espec√≠fico (P√∫blico)
GET {{baseUrl}}/products/{{product3Id}}
Content-Type: application/json

###

### ========================================
### INSTRU√á√ïES DE DEMONSTRA√á√ÉO
### ========================================

# üéØ FLUXO COMPLETO DE DEMONSTRA√á√ÉO:
# 
# 1Ô∏è‚É£ PREPARA√á√ÉO (Etapas 1-4):
#    - Crie 1 consumidor e 2 produtores com dados gen√©ricos
#    - Fa√ßa login de todos os usu√°rios e copie os tokens
#    - Crie endere√ßo de entrega para o consumidor
#    - Cadastre 2 produtos por produtor (total: 4 produtos variados)
# 
# 2Ô∏è‚É£ DEMONSTRA√á√ÉO PRINCIPAL (Etapas 5-6):
#    - Liste produtos dispon√≠veis
#    - Crie pedidos √∫nicos e recorrentes misturando produtos dos 2 produtores
#    - Cada produtor gerencia apenas seus pr√≥prios produtos
#    - Demonstre aprova√ß√µes e rejei√ß√µes
# 
# 3Ô∏è‚É£ GEST√ÉO AVAN√áADA (Etapas 7-8):
#    - Verifique status dos pedidos
#    - Gerencie pedidos recorrentes (pausar/retomar/alterar)
#    - Atualize produtos e visualize cat√°logo
# 
# üìã LEMBRE-SE:
#    - Sempre copie os IDs retornados para as vari√°veis
#    - Execute as requisi√ß√µes na ordem apresentada
#    - Use os tokens corretos para cada tipo de usu√°rio
#    - Produtores s√≥ veem/gerenciam seus pr√≥prios produtos
# 
# üåê DOCUMENTA√á√ÉO COMPLETA:
#    - Acesse http://localhost:3333/docs para Swagger UI
#    - Veja diagramas t√©cnicos no README.md do projeto
# 
# üé® CEN√ÅRIO DEMONSTRADO:
#    - Fazenda Verde: Especialista em verduras e legumes org√¢nicos
#    - Pomar do Vale: Especialista em frutas frescas e temperos
#    - Maria Silva: Consumidora que compra de ambos os produtores
